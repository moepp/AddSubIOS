//------------------------------------------------------------------------------
// <wsdl2code-generated>
// This code was generated by http://www.wsdl2code.com iPhone version 1.5
// Date Of Creation: 4/30/2013 12:50:21 PM
//
//  Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Version
//

#import "WebserviceProblem.h" 


@implementation WebserviceProblem

-(id)initWithArray:(NSArray*)array {
    self = [super init];
    if (self) {
        @try {
            for (int i0 = 0; i0 < [array count]; i0++)
            {
                if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"id"]==NSOrderedSame)){
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    NSNumber *number = [[NSNumber alloc] initWithInt:[nodeContentValue intValue]];
                    [self setIId:number];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"first"]==NSOrderedSame)){
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    NSNumber *number = [[NSNumber alloc] initWithInt:[nodeContentValue intValue]];
                    [self setFirst:number];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"second"]==NSOrderedSame)){
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    NSNumber *number = [[NSNumber alloc] initWithInt:[nodeContentValue intValue]];
                    [self setSecond:number];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"operator"]==NSOrderedSame)){
                    NSString* nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setOperator:nodeContentValue];
                }
            }
        }
        @catch(NSException *ex){
        }
    }
    return self;
}
-(NSString*)toString:(BOOL)addNameWrap {
    NSMutableString *nsString = [NSMutableString string];
    if (addNameWrap == YES)
        [nsString appendString:@"<WebserviceProblem>" ];
    if (self.iId != nil) {
        [nsString appendFormat:@"<id>%@</id>" , [self iId]];
    }
    else {
        [nsString appendFormat:@"<id xsi:nil=\"true\" />"];
    }
    if (self.first != nil) {
        [nsString appendFormat:@"<first>%@</first>" , [self first]];
    }
    else {
        [nsString appendFormat:@"<first xsi:nil=\"true\" />"];
    }
    if (self.second != nil) {
        [nsString appendFormat:@"<second>%@</second>" , [self second]];
    }
    else {
        [nsString appendFormat:@"<second xsi:nil=\"true\" />"];
    }
    if (self.operator != nil) {
        [nsString appendFormat:@"<operator>%@</operator>" , [self operator]];
    }
    if (addNameWrap == YES)
        [nsString appendString:@"</WebserviceProblem>" ];
    return nsString;
}
#pragma mark - NSCoding
-(id)initWithCoder:(NSCoder *)decoder{
    self = [super init];
    if (self){
        self.iId = [decoder decodeObjectForKey:@"iId"];
        self.first = [decoder decodeObjectForKey:@"first"];
        self.second = [decoder decodeObjectForKey:@"second"];
        self.operator = [decoder decodeObjectForKey:@"operator"];
    }
    return self;
}
-(void)encodeWithCoder:(NSCoder *)encoder{
    [encoder encodeObject:self.iId forKey:@"iId"];
    [encoder encodeObject:self.first forKey:@"first"];
    [encoder encodeObject:self.second forKey:@"second"];
    [encoder encodeObject:self.operator forKey:@"operator"];
}
-(id)copyWithZone:(NSZone *)zone {
    WebserviceProblem *finalCopy = [[[self class] allocWithZone: zone] init];
    
    finalCopy.iId = self.iId;
    
    finalCopy.first = self.first;
    
    finalCopy.second = self.second;
    
    NSString *copy4 = [self.operator copy];
    finalCopy.operator = copy4;
    
    return finalCopy;
}

@end
